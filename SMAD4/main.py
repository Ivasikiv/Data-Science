import numpy as np
from scipy.stats import f

# –í—Ö—ñ–¥–Ω—ñ –¥–∞–Ω—ñ
data = np.array([[0.121, 0.140, 0.074, 0.106],
                 [0.173, 0.144, 0.125, 0.084],
                 [0.099, 0.062, 0.052, 0.045],
                 [-0.008, -0.052, 0.036, 0.023],
                 [0.051, 0.084, 0.090, 0.135],
                 [0.000, 0.124, 0.127, 0.185]])
# –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ñ–∞–∫—Ç–æ—Ä—ñ–≤ (—Ä—è–¥–∫–∏) - 6, –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –≤–∏–º—ñ—Ä—é–≤–∞–Ω–Ω—è (—Å—Ç–æ–≤–±—Ü—ñ) - 4


n_factors, n_measurements = data.shape
group_means = np.mean(data, axis=1)
overall_mean = np.mean(data)

print("")
print("–ì—Ä—É–ø–æ–≤—ñ —Å–µ—Ä–µ–¥–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è (ùë•ÃÖùëñ):", group_means)
print("–ó–∞–≥–∞–ª—å–Ω–µ —Å–µ—Ä–µ–¥–Ω—î –∑–Ω–∞—á–µ–Ω–Ω—è (ùë•ÃÖ):", overall_mean)
print("")


Q = np.sum(np.square(data - overall_mean))
Q1 = np.sum(n_measurements * np.square(group_means - overall_mean))
Q2 = np.sum(np.sum(np.square(data - group_means.reshape(-1, 1)), axis=1))


print("–ó–Ω–∞—á–µ–Ω–Ω—è Q:", Q)
print("–ó–Ω–∞—á–µ–Ω–Ω—è Q1:", Q1)
print("–ó–Ω–∞—á–µ–Ω–Ω—è Q2:", Q2)
print("")

# –û–±—á–∏—Å–ª–µ–Ω–Ω—è –Ω–µ–∑–º—ñ—â–µ–Ω–∏—Ö –æ—Ü—ñ–Ω–æ–∫ –¥–∏—Å–ø–µ—Ä—Å—ñ–π
S = Q / (n_factors * n_measurements - 1)
S1 = Q1 / (n_factors - 1)
S2 = Q2 / (n_factors * (n_measurements - 1))

print("–ù–µ–∑–º—ñ—â–µ–Ω–∞ –æ—Ü—ñ–Ω–∫–∞ –∑–∞–≥–∞–ª—å–Ω–æ—ó –¥–∏—Å–ø–µ—Ä—Å—ñ—ó (S^2):", S)
print("–ù–µ–∑–º—ñ—â–µ–Ω–∞ –æ—Ü—ñ–Ω–∫–∞ –º—ñ–∂–≥—Ä—É–ø–æ–≤–æ—ó –¥–∏—Å–ø–µ—Ä—Å—ñ—ó (S1^2):", S1)
print("–ù–µ–∑–º—ñ—â–µ–Ω–∞ –æ—Ü—ñ–Ω–∫–∞ –∑–∞–ª–∏—à–∫–æ–≤–æ—ó –¥–∏—Å–ø–µ—Ä—Å—ñ—ó (S2^2):", S2)
print("")

# –ï–º–ø—ñ—Ä–∏—á–Ω–µ —Ç–∞ —Ç–µ–æ—Ä–µ—Ç–∏—á–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è –∫—Ä–∏—Ç–µ—Ä—ñ—è –§—ñ—à–µ—Ä–∞-–°–Ω–µ–¥–µ–∫–æ—Ä–∞
# fisher_snedecor = {0.01: 4.2479, 0.05: 2.7728}
alpha = 0.05  # —Ä—ñ–≤–µ–Ω—å –∑–Ω–∞—á—É—â–æ—Å—Ç—ñ

F_empirical = S1 / S2
F_theoretical = f.ppf(1 - alpha, n_factors - 1, n_factors * (n_measurements - 1))


print("–ï–º–ø—ñ—Ä–∏—á–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è –∫—Ä–∏—Ç–µ—Ä—ñ—è –§—ñ—à–µ—Ä–∞-–°–Ω–µ–¥–µ–∫–æ—Ä–∞:", F_empirical)
print("–¢–µ–æ—Ä–µ—Ç–∏—á–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è –∫—Ä–∏—Ç–µ—Ä—ñ—è –§—ñ—à–µ—Ä–∞-–°–Ω–µ–¥–µ–∫–æ—Ä–∞:", F_theoretical)
print("")

# –ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –µ–º–ø—ñ—Ä–∏—á–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è –∫—Ä–∏—Ç–µ—Ä—ñ—è –§—ñ—à–µ—Ä–∞-–°–Ω–µ–¥–µ–∫–æ—Ä–∞ –∑ —Ç–µ–æ—Ä–µ—Ç–∏—á–Ω–∏–º –∑–Ω–∞—á–µ–Ω–Ω—è–º
if F_empirical > F_theoretical:
    print("–î–æ—Å–ª—ñ–¥–∂—É–≤–∞–Ω–∏–π —Ñ–∞–∫—Ç–æ—Ä –≤–ø–ª–∏–≤–∞—î –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏–º—ñ—Ä—é–≤–∞–Ω–Ω—è.")
else:
    print("–î–æ—Å–ª—ñ–¥–∂—É–≤–∞–Ω–∏–π —Ñ–∞–∫—Ç–æ—Ä –Ω–µ –≤–ø–ª–∏–≤–∞—î –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏–º—ñ—Ä—é–≤–∞–Ω–Ω—è.")
print("")
